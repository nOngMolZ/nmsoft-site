name: CI/CD for nmsoft React App

on:
  push:
    branches:
      - main # Trigger เมื่อมีการ Push ไปที่ Branch 'main'

jobs:
  build-and-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Updated to v4

      - name: Set up Node.js
        uses: actions/setup-node@v4 # Updated to v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install # หรือ yarn install

      - name: Build React application
        run: npm run build # หรือ yarn build

      - name: Log in to Docker Hub
        uses: docker/login-action@v3 # Updated to v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Updated to v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5 # Updated to v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/nmsoft:latest # ใช้ DOCKER_USERNAME จาก Secret
                                                          # หรือถ้า Repository บน Docker Hub ของคุณชื่ออื่น
                                                          # ก็เปลี่ยนเป็น your-docker-hub-repo-owner/nmsoft:latest

  deploy-to-server:
    name: Deploy to CentOS 7 Server
    needs: build-and-push-image
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to server using SSH
        uses: appleboy/ssh-action@v1.0.3 # Updated to specific version
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Logging in to Docker Hub on server (if needed for private images)..."
            # docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} # อาจจะไม่จำเป็นถ้า pull public image

            echo "Pulling the latest image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/nmsoft:latest

            echo "Stopping and removing the old container..."
            docker stop nmsoft-app || true
            docker rm nmsoft-app || true

            echo "Running the new container..."
            docker run -d \
              -p 80:80 \
              -p 443:443 \
              --name nmsoft-app \
              --restart unless-stopped \
              -v /opt/nmsoft/nginx_conf/default.conf:/etc/nginx/conf.d/default.conf \
              -v /etc/letsencrypt:/etc/letsencrypt:ro \
              ${{ secrets.DOCKER_USERNAME }}/nmsoft:latest # ใช้ชื่อ Image ที่ Pull มา

            echo "Cleaning up old Docker images..."
            docker image prune -af || true

            echo "Deployment complete!"